version: '3.5'

services:
  # neo4j:
  #   image: neo4j:community
  #   container_name: neo4j
  #   ports:
  #     - "18801:7474"
  #     - "18802:7687"
  #   volumes:
  #     - /home/stellar/neo4j/data:/data
  #     - /home/stellar/neo4j/logs:/logs
  #     - /home/stellar/neo4j/import:/import
  #     - /home/stellar/neo4j/plugins:/plugins
  #   environment:
  #     # 认证配置
  #     NEO4J_AUTH: neo4j/12345678

  #     # 内存配置
  #     NEO4J_dbms_memory_pagecache_size: 1G
  #     NEO4J_dbms_memory_heap_initial__size: 1G
  #     NEO4J_dbms_memory_heap_max__size: 1G

  #     # 时区配置
  #     NEO4J_db_temporal_timezone: Asia/Shanghai

  #     # APOC插件配置 - 新增部分
  #     NEO4J_PLUGINS: '["apoc"]'  # 自动安装APOC插件
  #     NEO4J_dbms_security_procedures_unrestricted: apoc.*  # 允许APOC执行所有操作
  #     NEO4J_apoc_export_file_enabled: "true"  # 启用文件导出
  #     NEO4J_apoc_import_file_enabled: "true"  # 启用文件导入
  #     NEO4J_apoc_import_file_use_neo4j_config: "true"  # 使用Neo4j配置的导入路径

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.18
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - /home/stellar/milvus/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2024-05-28T17-19-04Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - /home/stellar/milvus/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.5.14
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      MINIO_REGION: us-east-1
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - /home/stellar/milvus/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  attu:
    container_name: attu
    image: zilliz/attu:v2.5
    ports:
      - "8001:3000"  # 将宿主机8001映射到容器内3000（Attu默认端口）
    environment:
      MILVUS_URL: http://standalone:19530  # Milvus服务名为standalone
    depends_on:
      - "standalone"  # 确保Milvus先启动（如果在同一compose文件中）

networks:
  default:
    name: milvus